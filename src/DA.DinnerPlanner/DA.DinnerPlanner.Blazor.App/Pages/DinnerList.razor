@page "/DinnerList"
@using DA.DinnerPlanner.Model;
@using System.Text
@using DA.DinnerPlanner.Model.Contracts
@inject IDinnerPlannerContext dpcontext

<h1>Dinners</h1>
<table class="border">
	<thead>
		<tr>
			<th class="border border-2 border-dark">Name</th>
			<th class="border border-2 border-dark">Date and Time</th>
			<th class="border border-2 border-dark">No of persons allowed</th>
			<th class="border border-2 border-dark">No of guests (including cooks)</th>
			<th class="border border-2 border-dark">Actions</th>
			<th class="border border-2 border-dark">Ratings</th>
			<th class="border border-2 border-dark">Host</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var dinner in Dinners)
		{
			<tr>
				<td class="border border-2 border-dark">@dinner.Dinnerdescription</td>
				<td class="border border-2 border-dark">@dinner.DinnerDate</td>
				<td class="border border-2 border-dark">@dinner.NumberPersonsAllowed</td>
				<td class="border border-2 border-dark">@((dinner.Guests.Count + dinner.Cooks.Count).ToString())</td>
				<td class="border border-2 border-dark">
					@if (dinner.DinnerDate > DateTime.UtcNow)   // liegt das Dinner in der Zukunft, darf es gelöscht werden
					{
						<input type="image" src="img/delete.png" width="15" height="15"
						@onclick="(a)=>DelDinner(dinner)"/>
						<input type="button" value="Invite guests"
						@onclick="(a)=>InviteGuestsAsync(dinner)"/>
					}
					@* @if (dinner.DinnerDate < DateTime.UtcNow || dinner.HasTakenDone) // liegt es in der Vergangenheit oder fand es bereits statt, kann es bewertet werden *@
					{
						<a href="EditDinnerReview/@dinner.Id">rate</a>
					}
				</td>
				<td class="border border-2 border-dark">
					<ShowRatingsStars Dinner="dinner" />
				</td>
				<td class="border border-2 border-dark">@dinner.Host.GetDefaultDisplayName()</td>
			</tr>
			<tr>
				<th class="border border-2 border-dark" colspan="7">Guests</th>
			</tr>
			<tr>
				<td class="border border-2 border-dark" colspan="7">
					@* @string.Join(", ", dinner.Guests.Select(g=>g.GetDefaultDisplayName())) *@
					@foreach(var guest in dinner.Guests)
					{
						<a href="EditUser/@guest.Id">@guest.GetDefaultDisplayName()</a> 
					}
				</td>
			</tr>
		}
	</tbody>
</table>
<div>
	<h2>create new dinner</h2>
	<EditForm Model="@NewDinner" OnSubmit="NewDinnerSubmittedAsync">
		<div class="form-group">
			<label>Name/Description:</label>
			<InputText @bind-Value="@NewDinner.Dinnerdescription" />
 			<label>Date:</label>
			<InputDate @bind-Value="@NewDinner.DinnerDate" />
			<label>No. of Persons allowed:</label>
			<InputNumber @bind-Value="@NewDinner.NumberPersonsAllowed"/>
 		</div>
		<button type="submit" class="btn btn-primary">create</button>
	</EditForm>
</div>
